openapi: 3.0.3
info:
  title: G-Track TMS - Notifications, Search & Companies API
  description: |
    API endpoints for notifications, global search, and company management in G-Track TMS.
    All endpoints require JWT authentication and are multi-tenant scoped.
  version: 0.1.0
  contact:
    name: G-Track Support
    email: support@g-track.eu
    url: https://docs.g-track.eu

servers:
  - url: https://gtrack-backend-gtrack-backend-lnf9mi.laravel.cloud/api/v0
    description: Production API
  - url: http://localhost:8000/api/v0
    description: Local Development

security:
  - BearerAuth: []

paths:
  # ===================
  # NOTIFICATIONS API
  # ===================
  /notifications:
    get:
      summary: Get user notifications
      description: Retrieve paginated list of notifications for authenticated user
      tags:
        - Notifications
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: unread_only
          in: query
          schema:
            type: boolean
            default: false
        - name: category
          in: query
          schema:
            type: string
            enum: [driver, vehicle, order, invoice, system]
        - name: priority
          in: query
          schema:
            type: string
            enum: [low, normal, high, urgent]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsPaginatedResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/unread-count:
    get:
      summary: Get unread notification count
      description: Get count of unread notifications grouped by category and priority
      tags:
        - Notifications
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnreadCountResponse'

  /notifications/{id}/read:
    post:
      summary: Mark notification as read
      description: Mark a specific notification as read
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  read_at:
                    type: string
                    format: date-time
        '404':
          $ref: '#/components/responses/NotFound'

  /notifications/mark-all-read:
    post:
      summary: Mark all notifications as read
      description: Mark all user's notifications as read
      tags:
        - Notifications
      responses:
        '200':
          description: All notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  marked_read:
                    type: integer
                  message:
                    type: string

  /notifications/{id}:
    delete:
      summary: Archive notification
      description: Archive a notification (soft delete)
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification archived
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # ===================
  # SEARCH API
  # ===================
  /search:
    get:
      summary: Global search
      description: Full-text search across all entities (drivers, vehicles, orders, invoices)
      tags:
        - Search
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 2
            maxLength: 255
          description: Search query
        - name: categories
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [drivers, vehicles, orders, invoices]
          description: Categories to search in
        - name: limit
          in: query
          schema:
            type: integer
            default: 5
            minimum: 1
            maximum: 20
          description: Maximum results per category
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '422':
          $ref: '#/components/responses/ValidationError'

  # ===================
  # COMPANIES API
  # ===================
  /companies:
    get:
      summary: Get accessible companies
      description: Retrieve list of companies accessible by current user
      tags:
        - Companies
      responses:
        '200':
          description: List of companies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompaniesResponse'

  /companies/switch:
    post:
      summary: Switch active company
      description: Switch user's active company context
      tags:
        - Companies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - company_id
              properties:
                company_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Company switched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  company:
                    $ref: '#/components/schemas/CompanyBasic'
        '403':
          description: Access denied or company not active
        '404':
          description: Company not found

  # ===================
  # USER PREFERENCES API
  # ===================
  /user/notification-preferences:
    get:
      summary: Get notification preferences
      description: Retrieve user's notification preferences for all channels
      tags:
        - User
      responses:
        '200':
          description: Notification preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreferences'

    put:
      summary: Update notification preferences
      description: Update user's notification preferences
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: object
                  additionalProperties:
                    type: boolean
                in_app:
                  type: object
                  additionalProperties:
                    type: boolean
                telegram:
                  type: object
                  additionalProperties:
                    type: boolean
      responses:
        '200':
          description: Preferences updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  preferences:
                    $ref: '#/components/schemas/NotificationPreferences'

# ===================
# COMPONENTS
# ===================
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Auth0 JWT token

  schemas:
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          example: document_expired
        category:
          type: string
          enum: [driver, vehicle, order, invoice, system]
        title:
          type: string
        message:
          type: string
        icon:
          type: string
          nullable: true
          example: ðŸ”´
        notifiable_type:
          type: string
          nullable: true
          example: App\Models\DriverDocument
        notifiable_id:
          type: string
          format: uuid
          nullable: true
        action_url:
          type: string
          nullable: true
        action_text:
          type: string
          nullable: true
        priority:
          type: string
          enum: [low, normal, high, urgent]
        read_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time

    NotificationsPaginatedResponse:
      type: object
      properties:
        current_page:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        total:
          type: integer
        per_page:
          type: integer
        last_page:
          type: integer

    UnreadCountResponse:
      type: object
      properties:
        count:
          type: integer
        by_category:
          type: object
          properties:
            driver:
              type: integer
            vehicle:
              type: integer
            order:
              type: integer
            invoice:
              type: integer
            system:
              type: integer
        by_priority:
          type: object
          properties:
            low:
              type: integer
            normal:
              type: integer
            high:
              type: integer
            urgent:
              type: integer

    SearchResponse:
      type: object
      properties:
        query:
          type: string
        results:
          type: object
          properties:
            drivers:
              type: array
              items:
                $ref: '#/components/schemas/SearchResultDriver'
            vehicles:
              type: array
              items:
                type: object
            orders:
              type: array
              items:
                type: object
            invoices:
              type: array
              items:
                type: object
        total_results:
          type: integer
        search_time_ms:
          type: number

    SearchResultDriver:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          example: driver
        internal_number:
          type: string
          example: DRV-0001
        name:
          type: string
        status:
          type: string
        avatar_url:
          type: string
          nullable: true
        highlight:
          type: string
        url:
          type: string

    CompaniesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        current_company_id:
          type: string
          format: uuid

    Company:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        logo_url:
          type: string
          nullable: true
        active:
          type: boolean
        role:
          type: string
        is_current:
          type: boolean

    CompanyBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string

    NotificationPreferences:
      type: object
      properties:
        email:
          type: object
          additionalProperties:
            type: boolean
        in_app:
          type: object
          additionalProperties:
            type: boolean
        telegram:
          type: object
          additionalProperties:
            type: boolean

  responses:
    Unauthorized:
      description: Unauthorized - Invalid or missing JWT token
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthenticated

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string

    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: object
