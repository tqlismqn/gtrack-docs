name: Docs - Deploy
on:
  workflow_dispatch: {}
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      ready: ${{ steps.guard.outputs.ready }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Detect wheelhouse/lock
        id: guard
        run: |
          WCOUNT=$(ls -1 docs/vendor/wheels/*.whl 2>/dev/null | wc -l | tr -d ' ')
          LSIZE=$(test -f docs/requirements.lock.txt && wc -c < docs/requirements.lock.txt | tr -d ' ' || echo 0)
          READY=false; [ "$WCOUNT" -gt 0 ] && [ "$LSIZE" -gt 0 ] && READY=true
          echo "ready=$READY" >> $GITHUB_OUTPUT
          echo "wheel_count=$WCOUNT" >> $GITHUB_OUTPUT
          echo "lock_size=$LSIZE" >> $GITHUB_OUTPUT

      - name: Offline install
        if: steps.guard.outputs.ready == 'true'
        env:
          PIP_NO_INDEX: "1"
          PIP_FIND_LINKS: "docs/vendor/wheels"
        run: |
          python -m pip --version
          python -m pip install --no-index --find-links docs/vendor/wheels -r docs/requirements.lock.txt

      - name: Ensure Import placeholder (strict-safe)
        if: steps.guard.outputs.ready == 'true'
        run: |
          set -euo pipefail
          mkdir -p docs/import
          # Do nothing if README.md exists (it would conflict with index.md)
          if [ -f docs/import/README.md ]; then
            exit 0
          fi
          # Create placeholder index only if absent
          if [ ! -f docs/import/index.md ]; then
            cat > docs/import/index.md <<'MD'
---
title: Import (автосинк)
hide:
  - toc
---

# Import (автосинк)

Этот раздел наполняется автоматически из `docs/import/`.  
Как только появятся `.md`/`.yaml`, они попадут в меню (awesome-pages).
MD
          fi

      - name: Lint: no dual import roots
        run: |
          set -e
          if [ -f docs/import/index.md ] && [ -f docs/import/README.md ]; then
            echo "::error title=Duplicate import root::Both docs/import/index.md and docs/import/README.md exist. Keep only one."
            exit 2
          fi

      - name: Build (strict)
        if: steps.guard.outputs.ready == 'true'
        run: python -m mkdocs build --strict

      - name: Setup Pages
        if: steps.guard.outputs.ready == 'true'
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: steps.guard.outputs.ready == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    if: needs.build.outputs.ready == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
