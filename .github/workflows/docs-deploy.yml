name: Docs - Deploy
on:
  push:
    branches: [ main ]
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    outputs:
      ready: ${{ steps.guard.outputs.ready }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Detect wheelhouse/lock
        id: guard
        run: |
          WCOUNT=$(ls -1 docs/vendor/wheels/*.whl 2>/dev/null | wc -l | tr -d ' ')
          LSIZE=$(test -f docs/requirements.lock.txt && wc -c < docs/requirements.lock.txt | tr -d ' ' || echo 0)
          if [ "$WCOUNT" -gt 0 ] && [ "$LSIZE" -gt 0 ]; then
            echo "ready=true" >> $GITHUB_OUTPUT
          else
            echo "ready=false" >> $GITHUB_OUTPUT
          fi

      - name: Install docs deps (OFFLINE from wheelhouse)
        if: steps.guard.outputs.ready == 'true'
        env:
          PIP_NO_INDEX: "1"
          PIP_FIND_LINKS: "docs/vendor/wheels"
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip install -U pip
          python -m pip install --no-index --find-links docs/vendor/wheels -r docs/requirements.lock.txt

      - name: Build (strict)
        if: steps.guard.outputs.ready == 'true'
        run: python -m mkdocs build --strict

      - name: Setup Pages
        if: steps.guard.outputs.ready == 'true'
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: steps.guard.outputs.ready == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
  deploy:
    if: needs.build.outputs.ready == 'true'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
