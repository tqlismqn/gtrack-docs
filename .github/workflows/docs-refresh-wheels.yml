name: Docs - Refresh Wheels
on:
  workflow_dispatch:
    inputs:
      python:
        description: "Python version"
        required: false
        default: "3.11"
permissions:
  contents: write
  pull-requests: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python || '3.11' }}

      - name: Upgrade pip tooling
        run: |
          python -m pip install --upgrade pip wheel pip-tools

      - name: Compile lockfile (docs/requirements.lock.txt)
        run: |
          pip-compile --generate-hashes --quiet --allow-unsafe \
            --output-file docs/requirements.lock.txt docs/requirements.in
          echo "---- requirements.lock.txt ----"
          sed -n '1,120p' docs/requirements.lock.txt

      - name: Clean wheelhouse
        run: |
          rm -rf docs/vendor/wheels
          mkdir -p docs/vendor/wheels

      - name: Download wheels for locked requirements (pure wheels only)
        run: |
          python -m pip download --only-binary=:all: \
            --require-hashes \
            -r docs/requirements.lock.txt \
            -d docs/vendor/wheels

      - name: Sanity-check offline install
        run: |
          python -m venv .venv && source .venv/bin/activate
          pip install --no-index --find-links=docs/vendor/wheels -r docs/requirements.lock.txt
          python -c "import mkdocs; import pkgutil; print('mkdocs OK, plugins:', [m.name for m in pkgutil.iter_modules() if 'mkdocs' in m.name])"

      - name: MkDocs offline build (strict)
        run: |
          source .venv/bin/activate
          pip install --no-index --find-links=docs/vendor/wheels -r docs/requirements.lock.txt
          mkdocs build --strict

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "docs(ci): refresh wheelhouse & lock for offline PyPI\n\nDocs updated."
          title: "Docs: refresh wheelhouse & lock (offline PyPI)"
          body: |
            This PR updates:
            - `docs/requirements.lock.txt` (pip-compile with hashes)
            - `docs/vendor/wheels/*` (pure wheels for offline install)
            Also validated `mkdocs build --strict` in an offline context.
            **Docs updated.**
          branch: "ci/docs-refresh-wheels"
          delete-branch: true
