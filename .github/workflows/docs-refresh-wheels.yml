name: Docs - Refresh Wheels
on:
  workflow_dispatch:
    inputs:
      python:
        description: "Python version"
        required: false
        default: "3.11"
permissions:
  contents: write
  pull-requests: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python || '3.11' }}

      - name: Show runtime & network to PyPI (debug)
        run: |
          set -x
          python -V
          python -m pip --version
          curl -fsSI https://pypi.org/simple/ | head -n1 || true
          curl -fsSI https://files.pythonhosted.org/ | head -n1 || true

      - name: Upgrade pip tooling
        run: python -m pip install -U pip wheel pip-tools

      - name: Validate inputs
        run: |
          set -euxo pipefail
          test -f docs/requirements.in || { echo "::error file=docs/requirements.in::Missing docs/requirements.in"; exit 2; }
          echo "----- docs/requirements.in -----"
          sed -n '1,200p' docs/requirements.in

      - name: Compile lockfile (with hashes)
        run: |
          set -euxo pipefail
          python -m piptools compile \
            --resolver=backtracking \
            --generate-hashes \
            --allow-unsafe \
            --output-file docs/requirements.lock.txt docs/requirements.in
          echo "----- docs/requirements.lock.txt (head) -----"
          sed -n '1,120p' docs/requirements.lock.txt

      - name: Reset wheelhouse
        run: |
          rm -rf docs/vendor/wheels
          mkdir -p docs/vendor/wheels

      - name: Download wheels (pure only)
        run: |
          set -euxo pipefail
          python -m pip download \
            --only-binary=:all: \
            --require-hashes \
            -r docs/requirements.lock.txt \
            -d docs/vendor/wheels
          echo "----- downloaded wheels -----"
          ls -1 docs/vendor/wheels | sed -n '1,200p'

      - name: Sanity-check offline install & build
        run: |
          set -euxo pipefail
          python -m venv .venv
          . .venv/bin/activate
          pip install --no-index --find-links=docs/vendor/wheels -r docs/requirements.lock.txt
          python -c "import mkdocs; print('mkdocs OK', mkdocs.__version__)"
          python -m mkdocs build --strict

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: |
            docs(ci): refresh wheelhouse & lock for offline PyPI

            Docs updated.
          title: "Docs: refresh wheelhouse & lock (offline PyPI)"
          body: |
            - Updated `docs/requirements.lock.txt` (pip-tools with hashes)
            - Downloaded wheels to `docs/vendor/wheels/`
            - Verified offline install and `mkdocs build --strict`
            **Docs updated.**
          branch: "ci/docs-refresh-wheels"
          delete-branch: true
