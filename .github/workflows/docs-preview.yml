name: check-docs
on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]
permissions: { contents: read }
jobs:
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Detect wheelhouse/lock
        id: guard
        run: |
          WCOUNT=$(ls -1 docs/vendor/wheels/*.whl 2>/dev/null | wc -l | tr -d ' ')
          LSIZE=$(test -f docs/requirements.lock.txt && wc -c < docs/requirements.lock.txt | tr -d ' ' || echo 0)
          echo "wheel_count=$WCOUNT" >> $GITHUB_OUTPUT
          echo "lock_size=$LSIZE" >> $GITHUB_OUTPUT
          if [ "$WCOUNT" -gt 0 ] && [ "$LSIZE" -gt 0 ]; then
            echo "ready=true" >> $GITHUB_OUTPUT
            echo "Wheelhouse OK ($WCOUNT wheels), lock size $LSIZE"
          else
            echo "ready=false" >> $GITHUB_OUTPUT
            echo "::notice ::Skipping build: wheels=$WCOUNT, lock_size=$LSIZE"
          fi

      - name: Install docs deps (OFFLINE from wheelhouse) + plugin check
        if: steps.guard.outputs.ready == 'true'
        env:
          PIP_NO_INDEX: "1"
          PIP_FIND_LINKS: "docs/vendor/wheels"
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip --version
          python -m pip install --no-index --find-links docs/vendor/wheels -r docs/requirements.lock.txt
          python - <<'PY'
          import importlib, sys
          mods = [
            ("mkdocs", "mkdocs"),
            ("material", "mkdocs_material"),
            ("awesome-pages", "mkdocs_awesome_pages_plugin"),
            ("git-date-localized", "mkdocs_git_revision_date_localized_plugin"),
            ("pymdown-extensions", "pymdownx"),
          ]
          missing = []
          for label, mod in mods:
            try:
              m = importlib.import_module(mod)
              ver = getattr(m, "__version__", "?")
              print(f"[OK] {label}: {ver}")
            except Exception as e:
              missing.append((label, mod, str(e)))
          if missing:
            print("Missing modules:", missing); sys.exit(2)
          PY

      - name: Build docs (strict)
        if: steps.guard.outputs.ready == 'true'
        run: python -m mkdocs build --strict

      - name: Skip build (wheelhouse/lock not ready yet)
        if: steps.guard.outputs.ready != 'true'
        run: echo "::notice title=Docs build skipped::Wheelhouse пустой или lock отсутствует. Это ожидаемо для инфраструктурных PR."
